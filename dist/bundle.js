(()=>{"use strict";class e{constructor(e,t){this.id=t,this.color=e,this.position=0,this.isOnField=!1,this.isInEndzone=!1}moveOnPlayerBoard(e){this.position+=e}placeOnField(){this.isOnField=!0,this.position=1}removeFromField(){this.isOnField=!1,this.position=0}setIsInEndzone(){this.isInEndzone=!0}getEndzonePosition(){return this.position-41}getIsInEndzone(){return this.isInEndzone}getMaxDistance(e){return e<=44}}class t{constructor(e,t,n){this.color=e,this.name=t,this.defaultName=n,this.myFigures=[],this.createFigures(),this.myPlayerEndzone=[0,0,0,0]}createFigures(){for(let t=1;t<5;t++){let n=new e(this.color,t);this.myFigures.push(n)}}getDefaultName(){return this.defaultName}addFigureInEndzone(e){this.myPlayerEndzone[e.getEndzonePosition()]=e}getFiguresOnBank(){let e=[];return this.myFigures.forEach((t=>{t.isOnField||e.push(t.id)})),e}checkAllFiguresInEndzone(){return this.myFigures.every((e=>e.isInEndzone))}checkFiguresOnFieled(){return!!this.myFigures.find((e=>!0===e.isOnField))&&(console.log("hello true on field"),!0)}}class n{constructor(){this.rolledNum=0}rollCube(){this.rolledNum=Math.floor(6*Math.random())+1}getRolledNum(){return this.rolledNum}checkFor6(){return 6===this.rolledNum}}class s{constructor(){this.gameboard=Array(40).fill(0),this.figureStartPoint=0}placeFigure(e,t){const n=t;n?("Player1"==e.getDefaultName()?this.figureStartPoint=0:"Player2"==e.getDefaultName()?this.figureStartPoint=10:"Player3"==e.getDefaultName()?this.figureStartPoint=20:"Player4"==e.getDefaultName()&&(this.figureStartPoint=30),this.isOccupied(this.figureStartPoint)&&this.resetFigure(this.figureStartPoint),this.gameboard[this.figureStartPoint]=n,n.placeOnField()):console.log("Alle Figuren am Feld")}moveFigure(e,t){let n=this.getIndexOfFigure(e)+t;n>=40&&(n-=40),this.isOccupied(n)&&this.resetFigure(n),this.removeFigureStartPoint(e),e.getIsInEndzone()||(this.gameboard[n]=e)}removeFigureStartPoint(e){const t=this.getIndexOfFigure(e);this.gameboard[t]=0}isOccupied(t){return this.gameboard[t]instanceof e}resetFigure(e){this.gameboard[e].removeFromField()}getIndexOfFigure(e){return this.gameboard.findIndex((t=>t===e))}}class a{constructor(){this.playFieldCoords=[[10,4],[9,4],[8,4],[7,4],[6,4],[6,3],[6,2],[6,1],[6,0],[5,0],[4,0],[4,1],[4,2],[4,3],[4,4],[3,4],[2,4],[1,4],[0,4],[0,5],[0,6],[1,6],[2,6],[3,6],[4,6],[4,7],[4,8],[4,9],[4,10],[5,10],[6,10],[6,9],[6,8],[6,7],[6,6],[7,6],[8,6],[9,6],[10,6],[10,5]]}addId(e,t){const n=this.playFieldCoords.findIndex((e=>e[0]===t[0]&&e[1]===t[1]));-1!==n&&(e.classList.add("playContainer"),e.id=`playfield-${n}`)}}class i{constructor(){this.redEndzone=[[9,5],[8,5],[7,5],[6,5]],this.blueEndzone=[[5,1],[5,2],[5,3],[5,4]],this.greenEndzone=[[1,5],[2,5],[3,5],[4,5]],this.yellowEndzone=[[5,9],[5,8],[5,7],[5,6]],this.redStartPoint=[10,4],this.blueStartPoint=[4,0],this.yellowStartPoint=[6,10],this.greenStartPoint=[0,6],this.redReserve=[[8,1],[8,2],[9,1],[9,2]],this.blueReserve=[[1,1],[1,2],[2,1],[2,2]],this.greenReserve=[[1,8],[1,9],[2,8],[2,9]],this.yellowReserve=[[8,8],[8,9],[9,8],[9,9]]}setEndzone(e,t){const n=this.redEndzone.findIndex((e=>e[0]===t[0]&&e[1]===t[1])),s=this.blueEndzone.findIndex((e=>e[0]===t[0]&&e[1]===t[1])),a=this.yellowEndzone.findIndex((e=>e[0]===t[0]&&e[1]===t[1])),i=this.greenEndzone.findIndex((e=>e[0]===t[0]&&e[1]===t[1]));-1!==n&&(e.classList.add("redZone","endZone"),e.id=`red-${n}`),-1!==s&&(e.classList.add("blueZone","endZone"),e.id=`blue-${s}`),-1!==a&&(e.classList.add("yellowZone","endZone"),e.id=`yellow-${a}`),-1!==i&&(e.classList.add("greenZone","endZone"),e.id=`green-${i}`)}setStartPoints(e,t){this.redStartPoint[0]===t[0]&&this.redStartPoint[1]===t[1]&&e.classList.add("redZone","startPoint"),this.blueStartPoint[0]===t[0]&&this.blueStartPoint[1]===t[1]&&e.classList.add("blueZone","startPoint"),this.yellowStartPoint[0]===t[0]&&this.yellowStartPoint[1]===t[1]&&e.classList.add("yellowZone","startPoint"),this.greenStartPoint[0]===t[0]&&this.greenStartPoint[1]===t[1]&&e.classList.add("greenZone","startPoint")}setReserveBank(e,t){const n=this.redReserve.findIndex((e=>e[0]===t[0]&&e[1]===t[1])),s=this.blueReserve.findIndex((e=>e[0]===t[0]&&e[1]===t[1])),a=this.yellowReserve.findIndex((e=>e[0]===t[0]&&e[1]===t[1])),i=this.greenReserve.findIndex((e=>e[0]===t[0]&&e[1]===t[1]));-1!==n&&(e.classList.add("redBank","playContainer","redZone"),e.id=`redBank-${n+1}`),-1!==s&&(e.classList.add("blueBank","playContainer","blueZone"),e.id=`blueBank-${s+1}`),-1!==a&&(e.classList.add("yellowBank","playContainer","yellowZone"),e.id=`yellowBank-${a+1}`),-1!==i&&(e.classList.add("greenBank","playContainer","greenZone"),e.id=`greenBank-${i+1}`)}}class r{constructor(){this.gameCubeZone=[5,5]}createGamecubeUi(e,t){this.gameCubeZone[0]===t[0]&&this.gameCubeZone[1]===t[1]&&(e.classList.add("gameCube"),e.id="gameCube",e.innerHTML="6")}showGameCubeNum(e){document.getElementById("gameCube").innerHTML=`${e}`}}class l{constructor(){this.playField=new a,this.playerZones=new i,this.gameCubeUi=new r}createGrid(){const e=document.getElementById("playField");for(let t=0;t<11;t++)for(let n=0;n<11;n++){const s=document.createElement("div"),a=[t,n];this.playField.addId(s,a),this.playerZones.setEndzone(s,a),this.playerZones.setStartPoints(s,a),this.playerZones.setReserveBank(s,a),this.gameCubeUi.createGamecubeUi(s,a),e.appendChild(s)}}updateGameBoardUi(e){for(let t=0;t<e.gameboard.length;t++){const n=e.gameboard[t],s=document.getElementById(`playfield-${t}`);s.className="playContainer",0!==e.gameboard[t]&&(s.classList.add(`${n.color}Figure`),s.classList.add("figure"),s.classList.add(`${n.color}Figure${n.id}`)),"playfield-0"===s.id&&s.classList.add("redZone"),"playfield-10"===s.id&&s.classList.add("blueZone"),"playfield-20"===s.id&&s.classList.add("greenZone"),"playfield-30"===s.id&&s.classList.add("yellowZone")}}updateGameboardPlayerBank(e){e.forEach((e=>{let t=e.getFiguresOnBank();if(t)for(let n=1;n<=e.myFigures.length;n++){const s=document.getElementById(`${e.color}Bank-${n}`);console.log(s,"Bankelemnt"),t.includes(n)?(s.classList.add(`${e.color}Figure`),s.classList.add("figure"),s.classList.add(`${e.color}Figure${n}`)):(s.classList.remove(`${e.color}Figure`),s.classList.remove("figure"),s.classList.remove(`${e.color}Figure${n}`))}}))}updateGameBoardPlayerEndzone(e){for(let t=0;t<e.myFigures.length;t++){const n=document.getElementById(`${e.color}-${t}`);e.myFigures[t].isInEndzone?n.classList.add(`${e.color}Figure`):n.classList.remove(`${e.color}Figure`)}}highlightFiguresToMove(e){document.querySelectorAll(`.${e.color}Figure`).forEach((e=>{e.classList.add("playerTurn")}))}unlightFiguresToMove(e){document.querySelectorAll(".playContainer").forEach((e=>{e.classList.remove("playerTurn")}))}}class o{constructor(){this.gamePhase=0,this.attempt=0}getGamePhase(){return this.gamePhase}setGamePhaseOne(){this.gamePhase=0}setGamePhaseTwo(){this.gamePhase=1}setEndGame(){this.gamePhase=3}addNoFigureOnFieldAttempts(){this.attempt++}getNoFigureOnFieldAttempts(){return this.attempt}resetNoFigureOnFieldAttempts(){this.attempt=0}handleGameCube6(e){return e.checkFor6()&&this.resetNoFigureOnFieldAttempts(),e.checkFor6()}checkCanMoveOnThrow(e,t){return console.log("num =",e.getRolledNum()),t.checkFiguresOnFieled()?(console.log("hello check on field"),!0):e.checkFor6()?(console.log("hello gamecube check 6"),!0):(console.log("hello checkmove false"),!1)}}class d{constructor(e){this.gameBoard=new s,this.players=[],this.currentPlayerIndex=0,this.gameCube=new n,this.gameBoardUi=new l,this.createNewGame(),this.gamePhase=0,this.gameRules=new o,this.startScreen=e}createNewGame(){this.gameBoardUi.createGrid()}addPlayer(e){this.players.push(e)}playGame(e){console.log(e,"player1");const t=document.getElementById("playField");this.startScreen.changeScreens(),this.gameBoardUi.updateGameboardPlayerBank(this.players),t.addEventListener("click",(e=>{this.checkGamePhase(e.target),this.gameBoardUi.updateGameBoardUi(this.gameBoard)}))}checkGamePhase(e){let t;const n=this.getCurrentPlayer();console.log("player ",n),this.gameBoardUi.updateGameBoardUi(this.gameBoard),0===this.gameRules.getGamePhase()&&"gameCube"===e.id?(this.rollDice(),this.gameRules.checkCanMoveOnThrow(this.gameCube,n)?(this.gameBoardUi.highlightFiguresToMove(n),this.gameRules.setGamePhaseTwo(),this.gameRules.resetNoFigureOnFieldAttempts()):this.gameRules.getNoFigureOnFieldAttempts()<2?this.gameRules.addNoFigureOnFieldAttempts():(this.gameRules.resetNoFigureOnFieldAttempts(),this.nextTurn())):1===this.gameRules.getGamePhase()&&(t=this.getChosenFigureId(n,e),"number"==typeof t&&(this.moveCurrentPlayerFigure(n.myFigures[t]),this.gameBoardUi.updateGameboardPlayerBank(this.players),this.gameBoardUi.updateGameBoardPlayerEndzone(this.getCurrentPlayer()),this.nextTurn(),this.gameRules.setGamePhaseOne(),this.gameBoardUi.unlightFiguresToMove(n))),n.checkAllFiguresInEndzone()&&(console.log(`Player ${n.color} has won`),this.endGame())}endGame(){this.gameRules.setEndGame()}getChosenFigureId(e,t){return t.classList.contains(`${e.color}Figure1`)?0:t.classList.contains(`${e.color}Figure2`)?1:t.classList.contains(`${e.color}Figure3`)?2:t.classList.contains(`${e.color}Figure4`)?3:null}getCurrentPlayer(){return this.players[this.currentPlayerIndex]}nextTurn(){this.gameRules.handleGameCube6(this.gameCube)||(this.currentPlayerIndex=(this.currentPlayerIndex+1)%this.players.length)}rollDice(){this.gameCube.rollCube(),this.gameBoardUi.gameCubeUi.showGameCubeNum(this.gameCube.rolledNum)}moveCurrentPlayerFigure(e){const t=this.getCurrentPlayer(),n=this.gameCube.getRolledNum(),s=n+e.position;e.isOnField&&s<=40&&e.getMaxDistance(s)?(this.gameBoard.moveFigure(e,n),e.moveOnPlayerBoard(n)):e.isOnField&&s>40&&e.getMaxDistance(s)?(e.moveOnPlayerBoard(n),e.setIsInEndzone(),e.removeFromField(),this.gameBoard.moveFigure(e,n)):e.isOnField?console.log("Fehler moveCurrentPlayerFigure"):(e.placeOnField(),this.gameBoard.placeFigure(t,e))}isGameEnd(e){return e.checkAllFiguresInEndzone()}}const c=new class{constructor(){this.colors=["Rot","Blau","Grün","Gelb","Pink","Lila","Orange","Schwarz","Weiß","Braun"],this.createStartScreen()}createStartScreen(){const e=document.getElementById("start_ui");console.log("spiel start");const t=document.createElement("h1");t.textContent="Mensch Ärgere Dich Nicht",null==e||e.appendChild(t);const n=document.createElement("input");n.setAttribute("type","text"),n.placeholder="Spieler 1",n.id="playerOne",null==e||e.appendChild(n);const s=document.createElement("select");s.id="colorP1",this.colors.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,s.appendChild(t)})),null==e||e.appendChild(s);const a=document.createElement("input");a.setAttribute("type","text"),a.placeholder="Spieler 2",a.id="playerTwo",null==e||e.appendChild(a);const i=document.createElement("select");i.id="colorP2",this.colors.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,i.appendChild(t)})),null==e||e.appendChild(i);const r=document.createElement("input");r.setAttribute("type","text"),r.placeholder="Spieler 3",r.id="playerThree",null==e||e.appendChild(r);const l=document.createElement("select");l.id="colorP3",this.colors.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,l.appendChild(t)})),null==e||e.appendChild(l);const o=document.createElement("input");o.setAttribute("type","text"),o.placeholder="Spieler 4",o.id="playerFour",null==e||e.appendChild(o);const d=document.createElement("select");d.id="colorP4",this.colors.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,d.appendChild(t)})),null==e||e.appendChild(d);const c=document.createElement("select");c.id="boardType",["Standard","Taktisch","Chaos"].forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,c.appendChild(t)})),null==e||e.appendChild(c),["Schlagzwang","Friendly Fire","Philanthrop","Lone Fighter","Second Round"].forEach((t=>{const n=document.createElement("input");n.type="checkbox",n.id=t,n.name=t,null==e||e.appendChild(n);const s=document.createElement("label");s.htmlFor=t,s.textContent=t,null==e||e.appendChild(s)}));const u=document.createElement("button");u.textContent="Start",u.id="startButton",null==e||e.appendChild(u)}changeScreens(){const e=document.getElementById("start"),t=document.getElementById("content");e.style.display="none",t.style.display="flex"}};document.getElementById("startButton").addEventListener("click",(()=>{if(function(e,t,n,s){const a=[e,t,n,s];return new Set(a).size===a.length}(document.getElementById("colorP1").value,document.getElementById("colorP2").value,document.getElementById("colorP3").value,document.getElementById("colorP4").value)?(console.log("Farbauswahl gültig"),1):(console.log("Farbauswahl ungültig. Mehrere Spieler haben dieselbe Farbe."),0)){const e=new d(c),n=document.getElementById("colorP1").value,s=document.getElementById("playerOne").value||"Player1",a=document.getElementById("colorP2").value,i=document.getElementById("playerTwo").value||"Player2",r=document.getElementById("colorP3").value,l=document.getElementById("playerThree").value||"Player3",o=document.getElementById("colorP4").value,u=document.getElementById("playerFour").value||"Player4",h=new t(n,s,"Player1");e.addPlayer(h);const m=new t(a,i,"Player2");e.addPlayer(m);const g=new t(r,l,"Player3");e.addPlayer(g);const p=new t(o,u,"Player4");e.addPlayer(p),e.playGame(m)}else console.log("Farbauswahl ungültig. Bitte wähle für jeden Spieler eine einzigartige Farbe.")}))})();